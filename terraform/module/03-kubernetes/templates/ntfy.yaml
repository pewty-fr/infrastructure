apiVersion: apps/v1
kind: Deployment
metadata:
  name: ntfy
  labels:
    app: ntfy
spec:
  revisionHistoryLimit: 1
  replicas: 1
  selector:
    matchLabels:
      app: ntfy
  template:
    metadata:
      labels:
        app: ntfy
    spec:
      containers:
        - name: ntfy 
          image: binwiederhier/ntfy:v1.28.0 # set deployed version
          args: ["serve"]
          env:
            - name: NTFY_DEBUG # enable/disable debug
              value: "false"
            - name: NTFY_LOG_LEVEL # adjust log level
              value: INFO
          ports: 
            - containerPort: 80
              name: http-ntfy
          resources:
            limits:
              memory: 300Mi
              cpu:  200m
            requests:
              cpu: 150m
              memory: 150Mi
          volumeMounts:
            - mountPath: /etc/ntfy/server.yml
              subPath: server.yml
              name: config-volume # generated vie configMapGenerator from kustomization file
            - mountPath: /var/cache/ntfy
              name: cache-volume #cache volume mounted to persistent volume
      volumes:
        - name: config-volume
          configMap:  # uses configmap generator to parse server.yml to configmap
            name: ntfy-server-config
        - name: cache-volume
          persistentVolumeClaim: # stores /cache/ntfy in defined pv
            claimName: ntfy-pvc
---
# Basic service for port 80
apiVersion: v1
kind: Service
metadata:
  name: ntfy
spec:
  selector:
    app: ntfy
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ntfy-server-config
data:
  server.yml: |
    # Template: https://github.com/binwiederhier/ntfy/blob/main/server/server.yml
    base-url: https://${DOMAIN}
    cache-file: "/var/cache/ntfy/cache.db"
    attachment-cache-dir: "/var/cache/ntfy/attachments"
    auth-file: "/var/cache/ntfy/user.db"
    auth-default-access: "read-write"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ntfy-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: scw-bssd
  resources:
    requests:
      storage: 1Gi
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ntfy
# spec:
#   ingressClassName: traefik
#   rules:
#     - host: ${DOMAIN}
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name:  ntfy
#                 port:
#                   number: 80
